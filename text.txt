<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Navigation</title>
    <link rel="stylesheet" href="css/navigation.css">
</head>
<body>
<nav class="nav active">
    <div class="container">
        <h1 class="logo"><a href="navigation.html">My Website</a></h1>
        <ul>
            <li><a href="#" class="current">Home</a></li>
            <li><a href="#">About</a></li>
            <li><a href="#">Services</a></li>
            <li><a href="#">Contact</a></li>
        </ul>
    </div>
</nav>
<div class="hero">
    <div class="container">
        <h1>Welcome to my Website</h1>
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit, deserunt?</p>
    </div>
</div>
<section class="container content">
    <h2>Websites Built</h2>
    <p> <a href="search.html">1. Search</a>
        <br>
        <a href="loading.html">2. Loading</a>
        <br>
        <a href="expanding.html">3. Expanding</a>
        <br>
        <a href="sound.html">4. Sound</a>
        <br>
        <a href="navigation.html">5. Navigation</a>
        <br>
        <a href="landingPage.html">6. Landing Page</a></p>
    <h3>Content Two</h3>
    <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Ullam consectetur quos maiores non cum dolore in eius numquam adipisci autem voluptatem ut voluptatum mollitia, placeat temporibus, hic aliquid excepturi? Pariatur provident magni exercitationem facilis labore quisquam rem veniam. Possimus tempore nostrum est quo maiores sed aut asperiores iste, tenetur numquam.</p>
</section>
</body>
<script src="js/navigation.js"></script>
</html>


rulesBtn = document.getElemntById('rules-btn')

score = 0
brickRowCount = 9
brickColumnCount = 5

ball = {
    x:canvas.width / 2,
    y:canvas.height / 2
    size: 10,
    speed: 4;
    dx: 4;
    dy:-4;
}


//create paddle properties
paddle = {
    x: canvas.width / 2 - 40,
    y: canvas.height - 20,
    w: 80,
    h: 10,
    speed: 8,
    dx: 0,

}


//create brick propertites
brickInfo = {
    w: 70,
    h: 20,
    padding: 10,
    offsetX: 45,
    offsetY: 60,
    visible: true
}

// Create bricks
bricks = []
for (let i = 0; i < brickRowCount; i++) {
    bricks[i] =[]
    for (let j = 0; j < brickColumnCount; j++){
        const x = i * (brickInfo.w + brickInfo.padding) + brickInfo.offsetX
        const y = j * (brickInfo.h + brickInfo.padding) + brickInfo.offsetY
        bricks[i][j] = {x, y, ...brickInfo}

    }
}

// draw ball on canvas
function drawBall()
{
    ctx.beginPath()
    ctx.arc(ball.x, ball.y, ball.size, 0, Math.PI * 2, true)
    ctx.fillstyle = '#0095DD'
    ctx.fill()
    ctx.closePath()
}


//create bricks



//draw paddle
function drawPaddle()
{
    ctx.beginPath()
    ctx.rect(paddle.x, paddle.y, paddle.w, paddle.h)
    ctx.fillstyle = '#0095DD'
    ctx.fill()
    ctx.closePath()
}

//draw score on canvas
function drawScore() {
    ctx.fillText(`Score: ${score}`, canvas.width-100, 30)
}

//draw bricks on canvas
function drawBricks() {
    bricks.forEach(column => {
        column.forEach(brick => {
            
        })
    })
}


function draw() {
 drawPaddle()
 drawBall()
 drawScore()
}
